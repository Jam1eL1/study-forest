generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String
  password  String
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  Study  Study[]  @relation("UserStudy")
  Emojis Emojis[] @relation("UserEmojis")
  Habit  Habit[]  @relation("UserHabit")
}

model Study {
  id          Int                @id @default(autoincrement())
  authorId    String
  nickName    String
  title       String
  description String
  password    String?
  background  Study_backgrounds?
  point       Int?
  createAt    DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  author User     @relation("UserStudy", fields: [authorId], references: [id])
  Emojis Emojis[] @relation("StudyEmojis")
  Focus  Focus[]  @relation("StudyFocus")
}

enum Study_backgrounds {
  bg1
  bg2
  bg3
  bg4
  bg5
}

model Emojis {
  id          Int     @id @default(autoincrement())
  studyId     Int
  checkUserId String?

  emojiContent String?

  Study     Study? @relation("StudyEmojis", fields: [studyId], references: [id])
  checkUser User?  @relation("UserEmojis", fields: [checkUserId], references: [id])
}

model Habit {
  id        Int         @id @default(autoincrement())
  title     String
  createAt  DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  userId    String
  User      User        @relation("UserHabit", fields: [userId], references: [id])
  HabitList HabitList[]
}

model HabitList {
  id         Int     @id @default(autoincrement())
  habitId    Int
  content    String
  habitCheck Boolean
  Habit      Habit   @relation(fields: [habitId], references: [id])
}

model Focus {
  id        Int      @id @default(autoincrement())
  studyId   Int
  complete  Boolean
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  Study     Study    @relation("StudyFocus", fields: [studyId], references: [id])
}
